name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version upgrade type
        required: true
      preid:
        description: Prerelease ID, if applicable

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with: {node-version: '12'}
      - name: Create release
        env:
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: github-actions@github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: github-actions@github.com
        run: |
          npm version ${{ github.event.inputs.version }} \
            --preid=${{ github.event.inputs.preid }} \
            --no-git-tag-version

          new_version=$(cat package.json | jq -r .version)

          git add package*

          git commit --message="v$new_version"
          git push origin main

          git fetch origin release
          git checkout release
          git diff HEAD..main ':^.gitignore' ':^dist' | git apply
          npm run build
          git add --all
          git commit -m "Release from https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          git push origin release

          curl https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"tag_name\": \"$new_version\", \"target_commitish\":\"$(git rev-parse HEAD)\", \"name\":\"$new_version\",\"draft\": true}"
      # - uses: actions/cache@v2
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-
      # - run: npm ci
      # - env:
      #     GIT_AUTHOR_NAME: github-actions
      #     GIT_AUTHOR_EMAIL: github-actions@github.com
      #     GIT_COMMITTER_NAME: github-actions
      #     GIT_COMMITTER_EMAIL: github-actions@github.com
      #   run: |
      #     git fetch origin release
      #     git checkout release
      #     git diff HEAD..main ':^.gitignore' ':^dist' | git apply
      #     npm run build
      #     git add --all
      #     git commit -m "Build from https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
      #     git push origin release
